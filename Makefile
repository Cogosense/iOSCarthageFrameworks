TOPDIR = $(CURDIR)

BUILT_PRODUCTS_DIR ?= $(TOPDIR)/build
CARTHAGE_SRCDIR = $(TOPDIR)/Carthage/Checkouts
CARTHAGE_BUILDDIR = $(TOPDIR)/Carthage/Build/iOS
CLEANTARGETS =

all install : iOSDFULibrary.framework UICircularProgressRing.framework PopupDialog.framework CocoaLumberjack.framework

# ======== iOSDFULibrary (Zip)  ===========

IOSDFULIBRARY_CARTNAME = IOS-Pods-DFU-Library
IOSDFULIBRARY_DEP_CARTNAMES = 
IOSDFULIBRARY_NAMES = iOSDFULibrary Zip
IOSDFULIBRARY_SRCDIR = $(addprefix $(CARTHAGE_SRCDIR)/, $(IOSDFULIBRARY_CARTNAME))
IOSDFULIBRARY_DEP_SRCDIRS = $(addprefix $(CARTHAGE_SRCDIR)/, $(IOSDFULIBRARY_DEP_CARTNAMES))
IOSDFULIBRARY_FRAMEWORKS = $(addsuffix .framework, $(IOSDFULIBRARY_NAMES))
IOSDFULIBRARY_FRAMEWORKBUNDLES = $(addprefix $(CARTHAGE_BUILDDIR)/, $(IOSDFULIBRARY_FRAMEWORKS))
IOSDFULIBRARY_TARBALLS = $(addsuffix .tar.bz2, $(IOSDFULIBRARY_FRAMEWORKS))
IOSDFULIBRARY_ZIP = $(addsuffix .zip, $(firstword $(IOSDFULIBRARY_NAMES)))
IOSDFULIBRARY_BUILT_PRODUCTS = $(addprefix $(BUILT_PRODUCTS_DIR)/, $(IOSDFULIBRARY_FRAMEWORKS))

$(IOSDFULIBRARY_FRAMEWORKS): $(IOSDFULIBRARY_SRCDIR) $(IOSDFULIBRARY_FRAMEWORKBUNDLES) $(IOSDFULIBRARY_TARBALLS) $(IOSDFULIBRARY_ZIP) $(IOSDFULIBRARY_BUILT_PRODUCTS)

$(IOSDFULIBRARY_SRCDIR) :
	carthage checkout $(IOSDFULIBRARY_CARTNAME)

$(IOSDFULIBRARY_FRAMEWORKBUNDLES) :
	carthage build --no-use-binaries --verbose --platform iOS $(IOSDFULIBRARY_CARTNAME)

$(IOSDFULIBRARY_ZIP) :
	carthage archive $(IOSDFULIBRARY_NAMES)

clean-iOSDFULibrary.framework :
	$(RM) -r $$(carthage archive $(IOSDFULIBRARY_NAMES) | awk '{print $$3}')
	$(RM) -r $(IOSDFULIBRARY_TARBALLS) $(IOSDFULIBRARY_SRCDIR) $(IOSDFULIBRARY_DEP_SRCDIRS) $(IOSDFULIBRARY_BUILT_PRODUCTS)

CLEANTARGETS += clean-iOSDFULibrary.framework

# ======== UICircularProgressRing ===========

UICIRCULARPROGRESSRING_CARTNAME = UICircularProgressRing
UICIRCULARPROGRESSRING_DEP_CARTNAMES = 
UICIRCULARPROGRESSRING_NAMES = $(UICIRCULARPROGRESSRING_CARTNAME)
UICIRCULARPROGRESSRING_SRCDIR = $(addprefix $(CARTHAGE_SRCDIR)/, $(UICIRCULARPROGRESSRING_CARTNAME))
UICIRCULARPROGRESSRING_DEP_SRCDIRS = $(addprefix $(CARTHAGE_SRCDIR)/, $(UICIRCULARPROGRESSRING_DEP_CARTNAMES))
UICIRCULARPROGRESSRING_FRAMEWORKS = $(addsuffix .framework, $(UICIRCULARPROGRESSRING_NAMES))
UICIRCULARPROGRESSRING_FRAMEWORKBUNDLES = $(addprefix $(CARTHAGE_BUILDDIR)/, $(UICIRCULARPROGRESSRING_FRAMEWORKS))
UICIRCULARPROGRESSRING_TARBALLS = $(addsuffix .tar.bz2, $(UICIRCULARPROGRESSRING_FRAMEWORKS))
UICIRCULARPROGRESSRING_ZIP = $(addsuffix .zip, $(firstword $(UICIRCULARPROGRESSRING_NAMES)))
UICIRCULARPROGRESSRING_BUILT_PRODUCTS = $(addprefix $(BUILT_PRODUCTS_DIR)/, $(UICIRCULARPROGRESSRING_FRAMEWORKS))

$(UICIRCULARPROGRESSRING_FRAMEWORKS) : $(UICIRCULARPROGRESSRING_SRCDIR) $(UICIRCULARPROGRESSRING_FRAMEWORKBUNDLES) $(UICIRCULARPROGRESSRING_TARBALLS) $(UICIRCULARPROGRESSRING_ZIP) $(UICIRCULARPROGRESSRING_BUILT_PRODUCTS)

$(UICIRCULARPROGRESSRING_SRCDIR) :
	carthage checkout $(UICIRCULARPROGRESSRING_CARTNAME)
	(cd Carthage/Checkouts/UICircularProgressRing && patch -p1 < ../../../UICircularProgressRing.swift.patch)

$(UICIRCULARPROGRESSRING_FRAMEWORKBUNDLES) :
	carthage build --no-use-binaries --verbose --platform iOS $(UICIRCULARPROGRESSRING_CARTNAME)

$(UICIRCULARPROGRESSRING_ZIP) :
	carthage archive $(UICIRCULARPROGRESSRING_NAMES)

clean-UICircularProgressRing.framework :
	$(RM) -r $$(carthage archive $(UICIRCULARPROGRESSRING_NAMES) | awk '{print $$3}')
	$(RM) -r $(UICIRCULARPROGRESSRING_TARBALLS) $(UICIRCULARPROGRESSRING_SRCDIR) $(UICIRCULARPROGRESSRING_DEP_SRCDIRS) $(UICIRCULARPROGRESSRING_BUILT_PRODUCTS)

CLEANTARGETS += clean-UICircularProgressRing.framework

# ======== PopupDialog ===========

POPUPDIALOG_CARTNAME = PopupDialog
POPUPDIALOG_DEP_CARTNAMES = DynamicBlurView
POPUPDIALOG_NAMES = PopupDialog DynamicBlurView
POPUPDIALOG_SRCDIR = $(addprefix $(CARTHAGE_SRCDIR)/, $(POPUPDIALOG_CARTNAME))
POPUPDIALOG_DEP_SRCDIRS = $(addprefix $(CARTHAGE_SRCDIR)/, $(POPUPDIALOG_DEP_CARTNAMES))
POPUPDIALOG_FRAMEWORKS = $(addsuffix .framework, $(POPUPDIALOG_NAMES))
POPUPDIALOG_FRAMEWORKBUNDLES = $(addprefix $(CARTHAGE_BUILDDIR)/, $(POPUPDIALOG_FRAMEWORKS))
POPUPDIALOG_TARBALLS = $(addsuffix .tar.bz2, $(POPUPDIALOG_FRAMEWORKS))
POPUPDIALOG_ZIP = $(addsuffix .zip, $(firstword $(POPUPDIALOG_NAMES)))
POPUPDIALOG_BUILT_PRODUCTS = $(addprefix $(BUILT_PRODUCTS_DIR)/, $(POPUPDIALOG_FRAMEWORKS))

$(POPUPDIALOG_FRAMEWORKS) : $(POPUPDIALOG_SRCDIR) $(POPUPDIALOG_FRAMEWORKBUNDLES) $(POPUPDIALOG_TARBALLS) $(POPUPDIALOG_ZIP) $(POPUPDIALOG_BUILT_PRODUCTS)

$(POPUPDIALOG_SRCDIR) :
	carthage checkout $(POPUPDIALOG_CARTNAME)

$(POPUPDIALOG_FRAMEWORKBUNDLES) :
	carthage build --no-use-binaries --verbose --platform iOS $(POPUPDIALOG_CARTNAME)

$(POPUPDIALOG_ZIP) :
	carthage archive $(POPUPDIALOG_NAMES)

clean-PopupDialog.framework :
	$(RM) -r $$(carthage archive $(POPUPDIALOG_NAMES) | awk '{print $$3}')
	$(RM) -r $(POPUPDIALOG_TARBALLS) $(POPUPDIALOG_SRCDIR) $(POPUPDIALOG_DEP_SRCDIRS) $(POPUPDIALOG_BUILT_PRODUCTS)

CLEANTARGETS += clean-PopupDialog.framework

# ======== CocoaLumberjack ===========

COCOALUMBERJACK_CARTNAME = CocoaLumberjack
COCOALUMBERJACK_DEP_CARTNAMES = 
COCOALUMBERJACK_NAMES = CocoaLumberjack CocoaLumberjackSwift
COCOALUMBERJACK_SRCDIR = $(addprefix $(CARTHAGE_SRCDIR)/, $(COCOALUMBERJACK_CARTNAME))
COCOALUMBERJACK_DEP_SRCDIRS = $(addprefix $(CARTHAGE_SRCDIR)/, $(COCOALUMBERJACK_DEP_CARTNAMES))
COCOALUMBERJACK_FRAMEWORKS = $(addsuffix .framework, $(COCOALUMBERJACK_NAMES))
COCOALUMBERJACK_FRAMEWORKBUNDLES = $(addprefix $(CARTHAGE_BUILDDIR)/, $(COCOALUMBERJACK_FRAMEWORKS))
COCOALUMBERJACK_TARBALLS = $(addsuffix .tar.bz2, $(COCOALUMBERJACK_FRAMEWORKS))
COCOALUMBERJACK_ZIP = $(addsuffix .zip, $(firstword $(COCOALUMBERJACK_NAMES)))
COCOALUMBERJACK_BUILT_PRODUCTS = $(addprefix $(BUILT_PRODUCTS_DIR)/, $(COCOALUMBERJACK_FRAMEWORKS))

$(COCOALUMBERJACK_FRAMEWORKS): $(COCOALUMBERJACK_SRCDIR) $(COCOALUMBERJACK_FRAMEWORKBUNDLES) $(COCOALUMBERJACK_TARBALLS) $(COCOALUMBERJACK_ZIP) $(COCOALUMBERJACK_BUILT_PRODUCTS)

$(COCOALUMBERJACK_SRCDIR) :
	carthage checkout $(COCOALUMBERJACK_CARTNAME)

$(COCOALUMBERJACK_FRAMEWORKBUNDLES) :
	carthage build --verbose --platform iOS $(COCOALUMBERJACK_CARTNAME)

$(COCOALUMBERJACK_ZIP) :
	carthage archive $(COCOALUMBERJACK_NAMES)

clean-CocoaLumberjack.framework :
	$(RM) -r $$(carthage archive $(COCOALUMBERJACK_NAMES) | awk '{print $$3}')
	$(RM) -r $(COCOALUMBERJACK_TARBALLS) $(COCOALUMBERJACK_SRCDIR) $(COCOALUMBERJACK_DEP_SRCDIRS) $(COCOALUMBERJACK_BUILT_PRODUCTS)

CLEANTARGETS += clean-CocoaLumberjack.framework

# ======= Common recipes ===========
#
%.tar.bz2 : $(CARTHAGE_BUILDDIR)/%
	tar -C $(<D) -cjf $@ $(<F) || $(RM) $@

$(BUILT_PRODUCTS_DIR)/% : %.tar.bz2
	mkdir -p $(@D)
	tar -C $(@D) -xmf $<

clean: $(CLEANTARGETS)
	$(RM) -r Carthage
	$(RM) -r build
